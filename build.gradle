buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/libs-milestone" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

mainClassName = "com.intuit.developer.sampleapp.timetracking.Application"

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src-general/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src-general/text/java'
        }
    }
}


sourceCompatibility = 1.7
version = '1.0'

//custom variables for this project
project.ext {

}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.spring.io/libs-milestone" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}

dependencies {

    compile fileTree(dir: "libs/qbo-sdk", include: "*.jar")
    testCompile("org.jmockit:jmockit:1.12")
    testCompile("org.jmockit:jmockit-coverage:1.12")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.hsqldb:hsqldb") //set the database to hyper sql
    compile("org.springframework.data:spring-data-rest-webmvc")
    compile("commons-io:commons-io:2.4")
    compile("org.joda:joda-money:0.9.1")
    compile("ma.glasnost.orika:orika-core:1.4.5")
    compile('org.codehaus.jackson:jackson-core-asl:1.9.13')
    compile('org.codehaus.jackson:jackson-mapper-asl:1.9.13')


    testCompile("org.springframework.boot:spring-boot-starter-test")

    //oauth dependencies
    compile("oauth.signpost:signpost-core:1.2.1.2")

}

jar {
    baseName = 'time-tracking'
    version = '0.1.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12' //tie this buildscript to a specific version of gradle so that we get consistent behavior
}

test {
    ignoreFailures = true
    reports.html.enabled = false
}

sourceSets {
    main {
        //fixes bootRun not picking up resource files
        output.resourcesDir = output.classesDir
    }
}